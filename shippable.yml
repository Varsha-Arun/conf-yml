language: python

python:
  - 2.7

#runtime:
 # - nodePool: custom__x86_64__Ubuntu_16_04
 # - nodePool: dynamic__x86_64__Ubuntu_16_04__c4_large
  #- nodePool: dynamic__x86_64__Ubuntu_14_04__c4_xlarge
  #- nodePool: dynamic__x86_64__CentOS_7__c4_large
 # - nodePool: default-restricted 
  
services:
  - couchdb 
  - elasticsearch 
  - memcached 
  - mongodb 
  - mysql 
  - postgres 
  - rabbitmq 
  - redis  
  - riak 
  - selenium 
  - sqlite
  
build:
  pre_ci:
    - echo "pre-ci section"
    - docker build -t=523491569906.dkr.ecr.us-east-1.amazonaws.com/sampleecr:latest .
    - docker build -t=shippabledocker/sample_node_pvt:latest.40 .

  pre_ci_boot:
    image_name: drydock/u16all
    image_tag: master
    pull: true
    options: '--privileged=true --net=bridge -e FOO=true -e BOO=false'
    
  ci:
    - python -V
    - echo "ci section"
    
    - echo SHIPPABLE_COUCHDB_BINARY=$SHIPPABLE_COUCHDB_BINARY
    - echo SHIPPABLE_ES_BINARY=$SHIPPABLE_ES_BINARY
    - echo SHIPPABLE_MEMCACHED_BINARY=$SHIPPABLE_MEMCACHED_BINARY
    - echo SHIPPABLE_MONGODB_BINARY=$SHIPPABLE_MONGODB_BINARY
    - echo SHIPPABLE_MYSQL_BINARY=$SHIPPABLE_MYSQL_BINARY
    - echo SHIPPABLE_POSTGRES_BINARY=$SHIPPABLE_POSTGRES_BINARY
    - echo SHIPPABLE_RABBITMQ_BINARY=$SHIPPABLE_RABBITMQ_BINARY
    - echo SHIPPABLE_REDIS_BINARY=$SHIPPABLE_REDIS_BINARY
    - echo SHIPPABLE_SELENIUM_v=$SHIPPABLE_SELENIUM_BINARY    
    - echo SHIPPABLE_SQLITE_BINARY=$SHIPPABLE_SQLITE_BINARY

    - memcached -V
    - riak version
    - which mysql
    - mysql -V #|| true
    - which sqlite3 #|| true
    - java -jar /usr/local/selenium/selenium-server-standalone-3.14.0.jar --version
    - sqlite3 --version
    - psql --version
    - redis-server --version
    - dpkg -s rabbitmq-server | grep Version
    - mongod --version
    - elasticsearch --version
    - sleep 5
    - curl http://127.0.0.1:5984
    
    - docker pull shippabledocker/sample_node_pvt:ecr
    
  post_ci:
    - echo "post-ci section"
    - docker push shippabledocker/sample_node_pvt:latest.40
    
  on_success:
    - echo "on-success section"
    - ls
    
  on_failure:
    - echo "on-failure section"
    - ls
    
  cache: true
  #cache_dir_list:
   # - #dir1
   
  push:
    - docker push 523491569906.dkr.ecr.us-east-1.amazonaws.com/sampleecr:latest
    
integrations:
  hub:
  
   # #ECR integration
    - integrationName: awskeys
      type: amazonKeys
      region: us-east-1
    #  branches: #Testing the wildcards for branches exclude
      #  except:
#   - n*

 #Docker integration
    - integrationName: ship-docker
      type: dockerRegistryLogin
     # branches:
      #  only:
       #   - "build-all-sections"
